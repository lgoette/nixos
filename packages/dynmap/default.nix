
{ lib, stdenv, fetchurl, server-type ? "spigot"}:
let
pname = "dynmap";
version = "3.1-beta-7";
hashes = {
  # generated by running ./get_hashes.sh 3.1-beta-7
  "spigot" = "0hcianf40h6w7df55yq5632qnmkcb7sk2gnypriap1yf5xg9l9rn";
  "fabric-1.15.2" = "01gqxbdns675z8illmj9crz25hxbxx9cpjxrn1bcyxxjrzqsw007";
  "fabric-1.16.1" = "16f6hvbdzf1iq00ap9kmhaxn8y5j1hjdr3l5kxpyqhzn4kyx3cv1";
  "fabric-1.16.2" = "1my6c6jzdl756w4jbdwlh26i4gv8acflqp6z61zrg9a8wdpdircg";
  "fabric-1.16.4" = "090qr6qsghs1912gs87lmyrwm7kia9b5drm0ipz3hwvcvhqhfixn";
  "forge-1.11.2" = "1j14pgx2pabln85dkx7jpbpc2hpa9drg9wcbrqsdghrkn8v1aqr1";
  "forge-1.12.2" = "1d993mbr7iw6gi2jr28qz99qap8pijsnxndl6n8d11b92j64gix8";
  "forge-1.13.2" = "1h6hsvxqgm0hgjd7k25cgglsm1pdq2ssap0j65l9ppxb012m7ljd";
  "forge-1.14.4" = "1qdvyh5bf0cwpkbmxxkd5vhypaqmmrzdxrsgl88wpsk1bbi42r8x";
  "forge-1.15.2" = "1mahfkf6p3dlns6mr4z8pgzps8a2i3jf8xdlrkfd1wnjaczhbw00";
  "forge-1.16.1" = "0ma44y9ngfzfxlg6clj8jhhva5a622l41vq10v9m8mp5zsyjhadj";
  "forge-1.16.2" = "02mfcl5wyi4f0d1p4qwz2i9js3iwlzbsiv5wqcla2rnxpyw3b7hv";
  "forge-1.16.3" = "1rzyxf6spdrk0p56yy3m3c0rl8xyk2vv7jzpkczi3dcvghz0kqhg";
  "forge-1.16.4" = "0f3am0g1hn0fpyw7brahzk27h74f1iz1lhkviy392f8pr8sp1igc";
  "forge-1.16.5" = "10lm06g51gghkyq661q2gr8liyisicihajk95mwbhfc4jnpyi4c1";
};  
jar = fetchurl {
  url = if (version == "3.1-beta-7") then
      "https://github.com/webbukkit/${pname}/releases/download/v${version}/Dynmap-3.1-beta7-${server-type}.jar"
  else
      "https://github.com/webbukkit/${pname}/releases/download/v${version}/Dynmap-${version}-${server-type}.jar"
  ;
  sha256 = lib.attrsets.getAttrFromPath [server-type] hashes;
};
in
stdenv.mkDerivation rec {
  inherit version pname;

  preferLocalBuild = true;

  dontUnpack = true;
  dontConfigure = true;

  installPhase = ''
    mkdir -p $out
    cp ${jar} $out/${pname}.jar
  '';

  meta = with lib; {
    homepage = "https://github.com/webbukkit/dynmap";
    description =
    " A set of Minecraft mods that provide a real time web-based map system for various Minecraft server implementations.";
    license = licenses.asl20;
    # maintainers = with maintainers; [ zeratax ];
  };
}
